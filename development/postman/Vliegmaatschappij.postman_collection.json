{
	"info": {
		"_postman_id": "31a7c6e1-90e1-4b82-a5c1-8bf7b2a0faa9",
		"name": "Airline",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register  User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/hal+json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"user1\",\r\n    \"firstName\": \"us\",\r\n    \"lastName\": \"er\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/register",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfully logged in!\", () => {\r",
									"    pm.expect(pm.response.code === 200);\r",
									"\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    const authHeader = pm.response.headers.get(\"Authorization\");\r",
									"    const token = authHeader.substring(7);\r",
									"    pm.collectionVariables.set(\"authToken\", token);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/hal+json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfully logged in!\", () => {\r",
									"    pm.expect(pm.response.code === 200);\r",
									"\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    const authHeader = pm.response.headers.get(\"Authorization\");\r",
									"    const token = authHeader.substring(7);\r",
									"    pm.collectionVariables.set(\"authToken\", token);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/hal+json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"user1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Succesfully logged in!\", () => {\r",
									"    pm.expect(pm.response.code === 200);\r",
									"\r",
									"})\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    const authHeader = pm.response.headers.get(\"Authorization\");\r",
									"    const token = authHeader.substring(7);\r",
									"    pm.collectionVariables.set(\"authToken\", token);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/hal+json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"employee\",\r\n    \"password\": \"employee\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Airport",
			"item": [
				{
					"name": "Get Airports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"if (responseJson.length == 0) {return}\r",
									"\r",
									"//from https://learning.postman.com/docs/writing-scripts/script-references/test-examples\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Test if all fields are populated correctly\", () => {\r",
									"    responseJson.forEach(airport => {\r",
									"    pm.expect(airport.code).to.be.a('string');\r",
									"    pm.expect(airport.airportName).to.be.a('string');\r",
									"    pm.expect(airport.city).to.be.a('string');\r",
									"    pm.expect(airport.country).to.be.a('string');\r",
									"    pm.expect(airport.longitude).to.be.a('number');\r",
									"    pm.expect(airport.latitude).to.be.a('number');\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/airport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"airport"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Airport by Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404, no other status codes possible\", () => {\r",
									"    if (pm.response.code == 200) {\r",
									"        pm.response.to.have.status(200);\r",
									"    } else {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									"});\r",
									"\r",
									"if (pm.response.code == 404) {return} \r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"//from https://learning.postman.com/docs/writing-scripts/script-references/test-examples\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"//add test \r",
									"\r",
									"pm.test(\"Test if all fields are populated correctly\", () => {\r",
									"    pm.expect(responseJson.code).to.be.a('string');\r",
									"    pm.expect(responseJson.airportName).to.be.a('string');\r",
									"    pm.expect(responseJson.city).to.be.a('string');\r",
									"    pm.expect(responseJson.country).to.be.a('string');\r",
									"    pm.expect(responseJson.longitude).to.be.a('number');\r",
									"    pm.expect(responseJson.latitude).to.be.a('number');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/airport/SHIP",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"airport",
								"SHIP"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Airport by Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"airport succesfully deleted!\", () => {\r",
									"\r",
									"   if(pm.response.code === 403 || pm.response.code === 401){\r",
									"        throw new Error(\"Unauthorized\");\r",
									"    };\r",
									"    \r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,202,204,404]);\r",
									"    \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/airport/SHIP",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"airport",
								"SHIP"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Airport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codeICAO\": \"SHIP\",\r\n    \"name\": \"schiphol\",\r\n    \"city\": \"amsterdam\",\r\n    \"country\": \"netherlands\",\r\n    \"longitude\": 132,\r\n    \"latitude\": 83838\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/airport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"airport"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"airport succesfully changed!\",() => {\r",
									"   if(pm.response.code === 403 || pm.response.code === 401){\r",
									"        throw new Error(\"Unauthorized\");\r",
									"    };\r",
									"    \r",
									" const data = pm.response.json();\r",
									" const input = JSON.parse(pm.request.body.raw);\r",
									"    \r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(Object.values(pm.request.auth.bearer)[1].token.value != \"\");\r",
									" \r",
									"    pm.expect(data).to.have.all.keys('code', 'name','city','country','longitude','latitude');\r",
									"    pm.expect(input).to.have.all.keys('code', 'name','city','country','longitude','latitude');\r",
									"    \r",
									"    pm.expect(pm.request.method === \"PUT\");\r",
									"\r",
									"    \r",
									"    pm.expect(typeof data.name == \"string\");\r",
									"    pm.expect(typeof data.code == \"string\");\r",
									"    pm.expect(typeof data.country == \"string\");\r",
									"    pm.expect(typeof data.longitude == \"number\");\r",
									"    pm.expect(typeof data.latitude == \"number\");\r",
									" \r",
									"    pm.expect(input.name != null && typeof input.name == \"string\");\r",
									"    pm.expect(input.code != null && typeof input.code == \"string\");\r",
									"    pm.expect(input.country != null && typeof input.country == \"string\");\r",
									"    pm.expect(input.longitude != null && typeof input.longitude == \"number\");\r",
									"    pm.expect(input.latitude != null && typeof input.latitude == \"number\");\r",
									" \r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"codeICAO\": \"SHIP\",\r\n    \"name\": \"schiphol\",\r\n    \"city\": \"schiphol\",\r\n    \"country\": \"Belgium\",\r\n    \"longitude\": 13200,\r\n    \"latitude\": 83838\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/airport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"airport"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FlightRoute",
			"item": [
				{
					"name": "Get FlightRoutes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flightroute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flightroute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FlightRoute by ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flightroute/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flightroute",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post FlightRoute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"arrivalCodeICAO\": \"SHIT\",\r\n    \"departureCodeICAO\": \"SHIP\",\r\n    \"durationMinutes\": 120,\r\n    \"priceEconomy\": 100.00,\r\n    \"priceBusiness\": 150.00,\r\n    \"priceFirstClass\": 200.00\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flightroute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flightroute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update FlightRoute",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": 8,\r\n        \"arrivalCodeICAO\": \"SHIP\",\r\n        \"departureCodeICAO\": \"NIFO\",\r\n        \"durationMinutes\": 120,\r\n        \"priceEconomy\": 1000.0,\r\n        \"priceBusiness\": 1500.0,\r\n        \"priceFirstClass\": 2000.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flightroute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flightroute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete FlightRoute by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/flightroute/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flightroute",
								"8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Get Customer",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customer/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customer",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"ASaam\",\r\n    \"lastName\": \"aa\",\r\n    \"dateOfBirth\": \"2022-10-17T16:20\",\r\n    \"phoneNumber\": 612345672,\r\n    \"emailAddress\": \"ayoub@hu.nl\",\r\n    \"nationality\": \"purple\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customer/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customer",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 19,\r\n    \"firstName\": \"Ayoub\",\r\n    \"lastName\": \"aa\",\r\n    \"dateOfBirth\": \"2022-10-17T16:20\",\r\n    \"phoneNumber\": 612345672,\r\n    \"emailAddress\": \"ayoub@hu.nl\",\r\n    \"nationality\": \"purple\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customer"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employeet",
			"item": [
				{
					"name": "Get Employee",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee by ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"firstName\": \"Ayoub\",\r\n    \"lastName\": \"aa\",\r\n    \"dateOfBirth\": \"2200-03-16T13:56\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 12,\r\n    \"firstName\": \"samde man\",\r\n    \"lastName\": \"aa\",\r\n    \"dateOfBirth\": \"2022-10-17T16:20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "Get Booking",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/booking",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get booking by ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/booking/17",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking",
								"17"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Booking",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerId\": 13,\r\n    \"bookingClass\": \"ECONOMY\",\r\n    \"flightsIds\": [16],\r\n    \"passengers\": [{\r\n        \"firstName\": \"passenger\",\r\n        \"lastName\": \"aa\",\r\n        \"dateOfBirth\": \"2022-10-17T16:20\",\r\n        \"phoneNumber\": 612345672,\r\n        \"emailAddress\": \"passenger@hu.nl\",\r\n        \"nationality\": \"purple\"\r\n    }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/booking",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/booking/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 17,\r\n    \"customerId\": 19,\r\n    \"bookingClass\": \"FIRST\",\r\n    \"passengers\": [],\r\n    \"flightsIds\": [16]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/booking",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flight",
			"item": [
				{
					"name": "Get Flights",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/flight",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight"
							],
							"query": [
								{
									"key": "departure",
									"value": "2022-10-17T16:20",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Flight by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/flight/32",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight",
								"32"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Flight by Route and Departure",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/flight/route?departure=2022-10-17T16:20&route=30",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight",
								"route"
							],
							"query": [
								{
									"key": "departure",
									"value": "2022-10-17T16:20"
								},
								{
									"key": "route",
									"value": "30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Flight",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"flightRouteId\": 14,\r\n\"planeId\": 15,\r\n\"departureTime\": \"2022-10-17T16:20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flight",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Flight By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/flight/38",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight",
								"38"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Flight",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"flightId\":38,\r\n    \"flightRouteId\":30,\r\n\"planeId\":18,\r\n\"departureTime\":\"2022-11-13T14:20:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/flight",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"flight"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plane",
			"item": [
				{
					"name": "Get Planes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/plane",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"plane"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Plane By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/plane/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"plane",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Plane",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"type\":\"F17\",\r\n\"id\": 15,\r\n \"seatsEconomy\":120,\r\n \"seatsBusiness\":123,\r\n\"seatsFirstClass\":130}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/plane",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"plane"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Plane",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"Boeing\",\r\n    \"seatsEconomy\": 5,\r\n    \"seatsBusiness\": 50,\r\n    \"seatsFirstClass\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/plane",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"plane"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Swagger UI",
			"item": [
				{
					"name": "Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v2/api-docs",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v2",
								"api-docs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Fleet",
			"item": [
				{
					"name": "Get Fleet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/fleet",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"fleet"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": ""
		}
	]
}